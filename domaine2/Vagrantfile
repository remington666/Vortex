Vagrant.configure("2") do |config|

  config.vm.define "dc02" do|dc02|
    dc02.vm.box = "jborean93/WindowsServer2016"
    dc02.vm.box_version = "1.2.0"
    
    dc02.vm.hostname = "dc02"
    dc02.vm.guest = :windows
    dc02.winrm.transport = :ssl
    dc02.vm.network "private_network", ip: "10.10.2.2", name: "vboxnet2"
    dc02.winrm.basic_auth_only = true
    dc02.winrm.ssl_peer_verification = false # ajout suite a l'erruer ssl_peer_verification 
    
    
    dc02.vm.provider "virtualbox" do |vb|
      vb.name = "DC02"
      vb.memory = 2048 # 2 Go de RAM
      vb.cpus = 2 # 2 processeurs
    end

    dc02.vm.provision :ansible do |ansible|
      ansible.limit = 'all'
      ansible.playbook = 'ansible/playbook.yml'
      ansible.verbose =  true
      ansible.limit = "dc02"  # Exécute seulement dc02
      ansible.host_vars = {
      "dc02" => {"ansible_winrm_server_cert_validation" => "ignore"}
    }
    end 
  end

  config.vm.define "iis" do|iis|
    iis.vm.box = "jborean93/WindowsServer2016"
    iis.vm.box_version = "1.2.0"

    iis.vm.hostname = "IIS16"
    iis.vm.network "private_network", ip: "10.10.2.3", name: "vboxnet2"
    iis.vm.guest = :windows
    iis.winrm.transport = :ssl
    iis.winrm.basic_auth_only = true
    iis.winrm.ssl_peer_verification = false # ajout suite a l'erruer ssl_peer_verification 

    iis.vm.provider "virtualbox" do |vb|
      vb.name = "IIS16"
      vb.memory = 2048 # 2 Go de RAM
      vb.cpus = 2 # 2 processeurs
    end


    iis.vm.provision :ansible do |ansible|
      ansible.limit = 'all'
      ansible.playbook = 'ansible/playbook.yml'
      ansible.verbose =  true
      ansible.limit = "iis"  # Exécute seulement iis
      ansible.host_vars = {
      "iis" => {"ansible_winrm_server_cert_validation" => "ignore"}
    }
    end 
  end
  
  config.vm.define "ubuntu_server" do|ubuntu_server|
    ubuntu_server.vm.box = "ubuntu/trusty64"
    ubuntu_server.vm.box_version = "20191107.0.0"
    ubuntu_server.vm.hostname = "ubuntuSrv"

    ubuntu_server.vm.network "private_network", ip: "10.10.1.4"
    ubuntu_server.vm.provider "virtualbox" do |vb|
      vb.name = "ubuntuSrv"
      vb.memory = 2048 # 2 Go de RAM
      vb.cpus = 2 # 2 processeurs
    end

    ubuntu_server.vm.provision "shell", inline: <<-SHELL
      echo "vagrant"|sudo -S apt update -y  && sudo -S apt upgrade -y
      sudo apt install apache2 -y 
      sudo systemctl enable apache2.service
    SHELL
  end

  config.vm.define "windows10" do|windows10|
    windows10.vm.box = "gusztavvargadr/windows-10"
    windows10.vm.box_version = "2202.0.2409"
    windows10.vm.hostname = "windows10"

    windows10.vm.network "private_network", ip: "10.10.1.4"
    windows10.vm.boot_timeout = 800
    windows10.vm.guest = :windows
    windows10.winrm.transport = :ssl
    windows10.winrm.basic_auth_only = true
    windows10.winrm.ssl_peer_verification = false # ajout suite a l'erruer ssl_peer_verification 

    windows10.vm.provider "virtualbox" do |vb|
      vb.name = "windows10"
      vb.memory = 1024 # 2 Go de RAM
      vb.cpus = 1 # 2 processeurs
    end

    windows10.vm.provision :ansible do |ansible|
        ansible.limit = 'all'
        ansible.playbook = 'ansible/playbook.yml'
        ansible.verbose =  true
        ansible.limit = "windows10"  # Exécute seulement windows10
        ansible.host_vars = {
        "windows10" => {"ansible_winrm_server_cert_validation" => "ignore"}
      }
    end 
  end 
end
