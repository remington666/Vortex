Vagrant.configure("2") do |config|

  config.vm.define "wazuhserver" do |wazuhserver|
    wazuhserver.vm.box = "generic/debian12"
    wazuhserver.vm.hostname = "wazuhserver"
    wazuhserver.vm.network "forwarded_port", guest: 80, host: 8080
    wazuhserver.vm.network "forwarded_port", guest: 22, host: 2027
    wazuhserver.vm.network "private_network", type: "static", ip: "192.168.1.2"
    wazuhserver.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = 3
    end
    wazuhserver.vm.synced_folder ".", "/vagrant"

    wazuhserver.vm.provision "file", source: "confsoc/config.yml", destination: "/home/vagrant/config.yml"
    wazuhserver.vm.provision "file", source: "confsoc/filebeat.yml", destination: "/home/vagrant/filebeat.yml"
    wazuhserver.vm.provision "file", source: "confsoc/opensearch_dashboards.yml", destination: "/home/vagrant/opensearch_dashboards.yml"
    wazuhserver.vm.provision "file", source: "confsoc/opensearch.yml", destination: "/home/vagrant/opensearch.yml"

    
    wazuhserver.vm.provision "shell", name: "part1", inline: <<-SHELL
      sudo apt-get install -y gnupg apt-transport-https curl
      sudo curl -s https://packages.wazuh.com/key/GPG-KEY-WAZUH | sudo gpg --no-default-keyring --keyring gnupg-ring:/usr/share/keyrings/wazuh.gpg --import && sudo chmod 644 /usr/share/keyrings/wazuh.gpg
      sudo echo "deb [signed-by=/usr/share/keyrings/wazuh.gpg] https://packages.wazuh.com/4.x/apt/ stable main" | sudo tee -a /etc/apt/sources.list.d/wazuh.list
      echo "postfix postfix/main_mailer_type select No configuration" | sudo debconf-set-selections
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -y postfix
      sudo apt update && sudo apt upgrade -y && sudo apt-get install -y debconf adduser procps curl gnupg apt-transport-https filebeat debhelper libcap2-bin
    SHELL
    wazuhserver.vm.provision "shell", name: "postfix", inline: <<-SHELL
      sudo curl -sO https://packages.wazuh.com/4.10/wazuh-certs-tool.sh # && sudo curl -sO https://packages.wazuh.com/4.10/config.yml
      if [ -f wazuh-certs-tool.sh ]; then
        sudo bash /home/vagrant/wazuh-certs-tool.sh -A
      else
        echo "Le script wazuh-certs-tool.sh n'a pas été téléchargé correctement."
        exit 1
      fi
      sudo tar -cvf ./wazuh-certificates.tar -C ./wazuh-certificates/ .
      sudo apt install wazuh-indexer -y
      sudo apt install wazuh-manager -y
      sudo apt install wazuh-dashboard -y
    SHELL
    wazuhserver.vm.provision "shell", name: "part2", inline: <<-SHELL
      sudo rm -f /etc/wazuh-indexer/opensearch.yml
      sudo mv /home/vagrant/opensearch.yml /etc/wazuh-indexer/opensearch.yml
    SHELL
    wazuhserver.vm.provision "shell", name: "part3", inline: <<-SHELL
      NODE_NAME=node-1
      sudo mkdir /etc/wazuh-indexer/certs
      sudo tar -xf /home/vagrant/wazuh-certificates.tar -C /etc/wazuh-indexer/certs/ ./$NODE_NAME.pem ./$NODE_NAME-key.pem ./admin.pem ./admin-key.pem ./root-ca.pem
      sudo mv -n /etc/wazuh-indexer/certs/$NODE_NAME.pem /etc/wazuh-indexer/certs/indexer.pem
      sudo mv -n /etc/wazuh-indexer/certs/$NODE_NAME-key.pem /etc/wazuh-indexer/certs/indexer-key.pem
      sudo chmod 500 /etc/wazuh-indexer/certs
      sudo chmod 400 /etc/wazuh-indexer/certs/*
      sudo chown -R wazuh-indexer:wazuh-indexer /etc/wazuh-indexer/certs
    SHELL
    wazuhserver.vm.provision "shell", name: "part4", inline: <<-SHELL
      sudo systemctl daemon-reload
      sudo systemctl enable wazuh-indexer
      sudo systemctl start wazuh-indexer
    SHELL
    wazuhserver.vm.provision "shell", name: "part5", inline: <<-SHELL
      sudo /usr/share/wazuh-indexer/bin/indexer-security-init.sh
      sudo curl -k -u admin:admin https://192.168.1.2:9200
      sudo curl -k -u admin:admin https://192.168.1.2:9200/_cat/nodes?v
    SHELL

    wazuhserver.vm.provision "shell", name: "part6", inline: <<-SHELL
      sudo systemctl daemon-reload
      sudo systemctl enable wazuh-manager
      sudo systemctl start wazuh-manager
    SHELL
    wazuhserver.vm.provision "shell", name: "part7", inline: <<-SHELL
      sudo apt install filebeat
      sudo rm -f /etc/filebeat/filebeat.yml
      sudo mv /home/vagrant/filebeat.yml /etc/filebeat/filebeat.yml
    SHELL
    wazuhserver.vm.provision "shell", name: "part8", inline: <<-SHELL
      sudo chown root:root /etc/filebeat/filebeat.yml
      sudo chmod 600 /etc/filebeat/filebeat.yml
      sudo filebeat keystore create
    SHELL

    wazuhserver.vm.provision "shell", name: "part9", inline: <<-SHELL
      sudo echo admin | sudo filebeat keystore add username --stdin --force
      sudo echo admin | sudo filebeat keystore add password --stdin --force
      sudo curl -so /etc/filebeat/wazuh-template.json https://raw.githubusercontent.com/wazuh/wazuh/v4.7.2/extensions/elasticsearch/7.x/wazuh-template.json
      sudo chmod go+r /etc/filebeat/wazuh-template.json
      sudo curl -s https://packages.wazuh.com/4.x/filebeat/wazuh-filebeat-0.3.tar.gz | sudo tar -xvz -C /usr/share/filebeat/module
    SHELL


    wazuhserver.vm.provision "shell", name: "part10", inline: <<-SHELL
      NODE_NAME=node-1
      sudo mkdir /etc/filebeat/certs
      sudo tar -xf /home/vagrant/wazuh-certificates.tar -C /etc/filebeat/certs/ ./$NODE_NAME.pem ./$NODE_NAME-key.pem ./root-ca.pem
      sudo mv -n /etc/filebeat/certs/$NODE_NAME.pem /etc/filebeat/certs/filebeat.pem
      sudo mv -n /etc/filebeat/certs/$NODE_NAME-key.pem /etc/filebeat/certs/filebeat-key.pem
      sudo chmod 500 /etc/filebeat/certs
      sudo chmod 400 /etc/filebeat/certs/*
      sudo chown -R root:root /etc/filebeat/certs
    SHELL

    wazuhserver.vm.provision "shell", name: "part11", inline: <<-SHELL
      sudo systemctl daemon-reload
      sudo systemctl enable filebeat
      sudo systemctl start filebeat
    SHELL

    wazuhserver.vm.provision "shell", name: "part12", inline: <<-SHELL
      sudo filebeat test output
      sudo rm -f /etc/wazuh-dashboard/opensearch_dashboards.yml
      sudo mv /home/vagrant/opensearch_dashboards.yml /etc/wazuh-dashboard/opensearch_dashboards.yml
    SHELL

    wazuhserver.vm.provision "shell", name: "part13", inline: <<-SHELL
      NODE_NAME=node-1
      sudo mkdir /etc/wazuh-dashboard/certs
      sudo tar -xf /home/vagrant/wazuh-certificates.tar -C /etc/wazuh-dashboard/certs/ ./$NODE_NAME.pem ./$NODE_NAME-key.pem ./root-ca.pem
      sudo mv -n /etc/wazuh-dashboard/certs/$NODE_NAME.pem /etc/wazuh-dashboard/certs/dashboard.pem
      sudo mv -n /etc/wazuh-dashboard/certs/$NODE_NAME-key.pem /etc/wazuh-dashboard/certs/dashboard-key.pem
      sudo chmod 500 /etc/wazuh-dashboard/certs
      sudo chmod 400 /etc/wazuh-dashboard/certs/*
      sudo chown -R wazuh-dashboard:wazuh-dashboard /etc/wazuh-dashboard/certs
    SHELL

    wazuhserver.vm.provision "shell", name: "part14", inline: <<-SHELL
      sudo systemctl daemon-reload
      sudo systemctl enable wazuh-dashboard
      sudo systemctl start wazuh-dashboard
    SHELL

    wazuhserver.vm.provision "shell", name: "initwazuh", inline: <<-SHELL
      sudo systemctl daemon-reload
      sudo systemctl enable wazuh-manager
      sudo systemctl start wazuh-manager
    SHELL
    
    wazuhserver.vm.provision "shell", name: "install_ssh", inline: <<-SHELL
      sudo useradd -m -s /bin/bash ansible && echo "ansible:ansible" | sudo chpasswd
      sudo usermod -aG sudo ansible
    SHELL

  end


  # # Pour la partie installation d'un agent Wazuh sur un poste Linux
  # config.vm.define "linuxagent" do |linuxagent|
  #   linuxagent.vm.box = "ubuntu/focal64"
  #   linuxagent.vm.network "private_network", type: "static", ip: "192.168.1.3"
  #   linuxagent.vm.provider "virtualbox" do |vb|
  #     vb.memory = "1024"
  #     vb.cpus = 1
  #   end
  #   linuxagent.vm.provision "file", source: "/vagrant/conf/confagentlinux-ossec.conf", destination: "/home/vagrant/ossec.conf"
  #   linuxagent.vm.provision "shell", name: "part15", inline: <<-SHELL
  #     sudo hostnamectl set-hostname linuxagent
  #     sudo systemctl restart systemd-logind.service
  #     sudo apt-get install -y gnupg apt-transport-https curl
  #     sudo curl -s https://packages.wazuh.com/key/GPG-KEY-WAZUH | sudo gpg --no-default-keyring --keyring gnupg-ring:/usr/share/keyrings/wazuh.gpg --import && sudo chmod 644 /usr/share/keyrings/wazuh.gpg
  #     sudo echo "deb [signed-by=/usr/share/keyrings/wazuh.gpg] https://packages.wazuh.com/4.x/apt/ stable main" | sudo tee -a /etc/apt/sources.list.d/wazuh.list
  #     sudo apt-get update
  #     WAZUH_MANAGER="192.168.1.3"
  #     sudo apt-get install wazuh-agent
  #     sudo rm -f /var/ossec/etc/ossec.conf
  #     sudo mv /home/vagrant/ossec.conf /var/ossec/etc/ossec.conf
  #     sudo systemctl enable wazuh-agent
  #     sudo reboot
  #     sudo systemctl start wazuh-agent
  #   SHELL
  # end
end